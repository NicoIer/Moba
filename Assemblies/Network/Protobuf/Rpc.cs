// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: rpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from rpc.proto</summary>
public static partial class RpcReflection {

  #region Descriptor
  /// <summary>File descriptor for rpc.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static RpcReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "CglycGMucHJvdG8iQgoJU2VydmVyUnBjEhIKCm1ldGhvZEhhc2gYASABKAQS",
          "DwoHcGF5bG9hZBgCIAEoDBIQCghjbGllbnRJZBgDIAEoBCIwCglDbGllbnRS",
          "cGMSEgoKbWV0aG9kSGFzaBgBIAEoBBIPCgdwYXlsb2FkGAIgASgMIkIKCVRh",
          "cmdldFJwYxISCgptZXRob2RIYXNoGAEgASgEEg8KB3BheWxvYWQYAiABKAwS",
          "EAoIY2xpZW50SWQYAyABKARiBnByb3RvMw=="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::ServerRpc), global::ServerRpc.Parser, new[]{ "MethodHash", "Payload", "ClientId" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientRpc), global::ClientRpc.Parser, new[]{ "MethodHash", "Payload" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::TargetRpc), global::TargetRpc.Parser, new[]{ "MethodHash", "Payload", "ClientId" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class ServerRpc : pb::IMessage<ServerRpc>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ServerRpc> _parser = new pb::MessageParser<ServerRpc>(() => new ServerRpc());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ServerRpc> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RpcReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerRpc() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerRpc(ServerRpc other) : this() {
    methodHash_ = other.methodHash_;
    payload_ = other.payload_;
    clientId_ = other.clientId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ServerRpc Clone() {
    return new ServerRpc(this);
  }

  /// <summary>Field number for the "methodHash" field.</summary>
  public const int MethodHashFieldNumber = 1;
  private ulong methodHash_;
  /// <summary>
  ///方法的hash值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MethodHash {
    get { return methodHash_; }
    set {
      methodHash_ = value;
    }
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 2;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  /// <summary>
  ///方法的参数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "clientId" field.</summary>
  public const int ClientIdFieldNumber = 3;
  private ulong clientId_;
  /// <summary>
  ///客户端id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ClientId {
    get { return clientId_; }
    set {
      clientId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ServerRpc);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ServerRpc other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MethodHash != other.MethodHash) return false;
    if (Payload != other.Payload) return false;
    if (ClientId != other.ClientId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MethodHash != 0UL) hash ^= MethodHash.GetHashCode();
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    if (ClientId != 0UL) hash ^= ClientId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MethodHash != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MethodHash);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (ClientId != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(ClientId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MethodHash != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MethodHash);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (ClientId != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(ClientId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MethodHash != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MethodHash);
    }
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (ClientId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ServerRpc other) {
    if (other == null) {
      return;
    }
    if (other.MethodHash != 0UL) {
      MethodHash = other.MethodHash;
    }
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
    if (other.ClientId != 0UL) {
      ClientId = other.ClientId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MethodHash = input.ReadUInt64();
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
        case 24: {
          ClientId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MethodHash = input.ReadUInt64();
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
        case 24: {
          ClientId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ClientRpc : pb::IMessage<ClientRpc>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ClientRpc> _parser = new pb::MessageParser<ClientRpc>(() => new ClientRpc());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientRpc> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RpcReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientRpc() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientRpc(ClientRpc other) : this() {
    methodHash_ = other.methodHash_;
    payload_ = other.payload_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientRpc Clone() {
    return new ClientRpc(this);
  }

  /// <summary>Field number for the "methodHash" field.</summary>
  public const int MethodHashFieldNumber = 1;
  private ulong methodHash_;
  /// <summary>
  ///方法的hash值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MethodHash {
    get { return methodHash_; }
    set {
      methodHash_ = value;
    }
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 2;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  /// <summary>
  ///方法的参数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientRpc);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientRpc other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MethodHash != other.MethodHash) return false;
    if (Payload != other.Payload) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MethodHash != 0UL) hash ^= MethodHash.GetHashCode();
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MethodHash != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MethodHash);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MethodHash != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MethodHash);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MethodHash != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MethodHash);
    }
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientRpc other) {
    if (other == null) {
      return;
    }
    if (other.MethodHash != 0UL) {
      MethodHash = other.MethodHash;
    }
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MethodHash = input.ReadUInt64();
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MethodHash = input.ReadUInt64();
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class TargetRpc : pb::IMessage<TargetRpc>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<TargetRpc> _parser = new pb::MessageParser<TargetRpc>(() => new TargetRpc());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<TargetRpc> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::RpcReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TargetRpc() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TargetRpc(TargetRpc other) : this() {
    methodHash_ = other.methodHash_;
    payload_ = other.payload_;
    clientId_ = other.clientId_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public TargetRpc Clone() {
    return new TargetRpc(this);
  }

  /// <summary>Field number for the "methodHash" field.</summary>
  public const int MethodHashFieldNumber = 1;
  private ulong methodHash_;
  /// <summary>
  ///方法的hash值
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong MethodHash {
    get { return methodHash_; }
    set {
      methodHash_ = value;
    }
  }

  /// <summary>Field number for the "payload" field.</summary>
  public const int PayloadFieldNumber = 2;
  private pb::ByteString payload_ = pb::ByteString.Empty;
  /// <summary>
  ///方法的参数
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pb::ByteString Payload {
    get { return payload_; }
    set {
      payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "clientId" field.</summary>
  public const int ClientIdFieldNumber = 3;
  private ulong clientId_;
  /// <summary>
  ///客户端id
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ulong ClientId {
    get { return clientId_; }
    set {
      clientId_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as TargetRpc);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(TargetRpc other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (MethodHash != other.MethodHash) return false;
    if (Payload != other.Payload) return false;
    if (ClientId != other.ClientId) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (MethodHash != 0UL) hash ^= MethodHash.GetHashCode();
    if (Payload.Length != 0) hash ^= Payload.GetHashCode();
    if (ClientId != 0UL) hash ^= ClientId.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (MethodHash != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MethodHash);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (ClientId != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(ClientId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (MethodHash != 0UL) {
      output.WriteRawTag(8);
      output.WriteUInt64(MethodHash);
    }
    if (Payload.Length != 0) {
      output.WriteRawTag(18);
      output.WriteBytes(Payload);
    }
    if (ClientId != 0UL) {
      output.WriteRawTag(24);
      output.WriteUInt64(ClientId);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (MethodHash != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MethodHash);
    }
    if (Payload.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
    }
    if (ClientId != 0UL) {
      size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ClientId);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(TargetRpc other) {
    if (other == null) {
      return;
    }
    if (other.MethodHash != 0UL) {
      MethodHash = other.MethodHash;
    }
    if (other.Payload.Length != 0) {
      Payload = other.Payload;
    }
    if (other.ClientId != 0UL) {
      ClientId = other.ClientId;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          MethodHash = input.ReadUInt64();
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
        case 24: {
          ClientId = input.ReadUInt64();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          MethodHash = input.ReadUInt64();
          break;
        }
        case 18: {
          Payload = input.ReadBytes();
          break;
        }
        case 24: {
          ClientId = input.ReadUInt64();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
